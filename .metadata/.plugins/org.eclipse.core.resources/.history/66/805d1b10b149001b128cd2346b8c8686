package com.learning.dsal.slidingwindow;

/**
 * Problem statement : Given an array of integers A[] and a sliding window K.
 * Output : return the subarray with maximum sum i.e. the range
 * @author User
 *
 */
public class MaximumSumSubArray {

	public static void main(String[] args) {
		int[] A = {1, 3, 11, -3, 5, 8, 6, 4};
		int k = 3;// slidingWindow
		int[] output = findMaximumSumSubArray(A, k);
		
		for (int i = 0; i < output.length; i++)
			System.out.print(output[i] + " ");
	}

	private static int[] findMaximumSumSubArray(int[] A, int k) {
		int i = 0;
		int j = 0;
		
		int maxSum = 0;
		int sum = 0;
		while (j - i + 1 < k) {
			sum = sum + A[j];
			j++;
		}

		maxSum = sum;
		
		// now, slide the window k
		int[] indices = new int[2];
		return null;
	}
}
